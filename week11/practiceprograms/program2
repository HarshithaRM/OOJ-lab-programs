/*Develop a multithreaded Java program to create three threads. First thread generates
random integer for every second and if the value is even, second thread computes the
square of number and prints. If the value is odd, the third thread will print the value of
cube of number.*/

class Randomnum implements Runnable
{ 
	Thread t;
   Randomnum()
   {
     t=new Thread(this, "NThread");
	 System.out.println("CT:"+t);
	 t.start();
   }
   
  public void run()
   {
	  int num;
	   try
	   {
		   for(int n=5;n>0;n--)
		   {
			   num=(int)(Math.random()*10);
			 System.out.println("random number="+num);
			 if(num%2==0){
				 square s=new square(num);}

			else{
				cube c=new cube(num);}

			 Thread.sleep(10000);
		   }
	   }
	   catch(InterruptedException ie)
	   {
		   System.out.println("Child Thread Interrupted");
	   }
	   System.out.println("Child Thread quitting");
   }
}

class square implements Runnable
{ 
	Thread t;
	int num;
   square(int n)
   {
     t=new Thread(this, "SquareThread");
	 System.out.println("CT:"+t);
	 num=n;
	 t.start();
   }
   
  public void run()
   {
	   try
	   {
			 System.out.println("square="+(num*num));
			 Thread.sleep(500);
		   
	   }
	   catch(InterruptedException ie)
	   {
		   System.out.println("Child Thread Interrupted");
	   }
	   System.out.println("square Thread quitting");
   }
}

class cube implements Runnable
{ 
	Thread t;
	int num;
   cube(int n)
   {
     t=new Thread(this, "cubeThread");
	 System.out.println("CT:"+t);
	 num=n;
	 t.start();
   }
   
  public void run()
   {
	   try
	   {
			 System.out.println("cube="+(num*num*num));
			 Thread.sleep(500);
		   
	   }
	   catch(InterruptedException ie)
	   {
		   System.out.println("Child Thread Interrupted");
	   }
	   System.out.println("cube Thread quitting");
   }
}

class Thread3
{
	public static void main(String ss[])
	{
		Randomnum n1=new Randomnum();
		//n1.t.start();
		System.out.println("Back in main");
		
	}
}
