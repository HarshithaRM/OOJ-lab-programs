/*Develop a multithreaded Java program to create three threads. First thread generates
random integer for every second and if the value is even, second thread computes the
square of number and prints. If the value is odd, the third thread will print the value of
cube of number.*/

class Randomnum implements Runnable
{ 
	Thread t;
	String s;
	int wait;
	
   Randomnum(String n,int time)
   {
	   s=n;
	   wait=time;
	   
     t=new Thread(this,s);
	 System.out.println("CT:"+t);
	 t.start();
   }
   
  public void run()
   {
	   try
	      {
			 Thread.sleep(wait);
		   }
	   
	   catch(InterruptedException ie)
	   {
		   System.out.println("Child Thread Interrupted");
	   }
	   System.out.println(s+" thread quitting");
   }

   int generaterandom()
	{
	   int num;
	   num=(int)(Math.random()*10);
	   System.out.println("random number generated:"+num);
   
	   return num;
   }

   void square(int n)
	{
	   System.out.println("square="+(n*n));
	}

	void cube(int n)
	{
		System.out.println("cube="+(n*n*n));
	}
}
   
   class Thread3
{
	public static void main(String ss[])
	{
   int n;
		Randomnum n1=new Randomnum("random",1000);
		System.out.println("Back in main");

		 Randomnum n2=new Randomnum("square",500);
		 System.out.println("Back in main");

		  Randomnum n3=new Randomnum("cube",500);
	    //n1.t.start();
		System.out.println("Back in main");

           for(int i=0;i<5;i++)
		{
            n=n1.generaterandom();
		 if(n%2==0)
			{
            
			 n2.square(n);
			}

			  else
			{
             
              n3.cube(n);
			}



		}
		System.out.println("Back in main");
		
	}
}
